-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local PathfindingService = game:GetService("PathfindingService")
local LocalPlayer = Players.LocalPlayer

-- Character & Humanoid
local chr = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local hum = chr:WaitForChild("Humanoid")
local hrp = chr:WaitForChild("HumanoidRootPart")

-- GUI
local ScreenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
ScreenGui.Name = "AutoWalkGUI"
ScreenGui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame")
mainFrame.Parent = ScreenGui
mainFrame.Size = UDim2.new(0, 350, 0, 200)
mainFrame.Position = UDim2.new(0.3,0,0.3,0)
mainFrame.BackgroundColor3 = Color3.fromRGB(30,30,30)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.ClipsDescendants = true
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0,12)
corner.Parent = mainFrame

local title = Instance.new("TextLabel")
title.Parent = mainFrame
title.Text = "Auto Walk | 3D Theme"
title.Size = UDim2.new(1,0,0,40)
title.Position = UDim2.new(0,0,0,0)
title.BackgroundTransparency = 1
title.Font = Enum.Font.SourceSansBold
title.TextSize = 22
title.TextColor3 = Color3.fromRGB(255,255,255)

-- Close Button
local closeBtn = Instance.new("TextButton")
closeBtn.Parent = mainFrame
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1,-35,0,5)
closeBtn.Text = "X"
closeBtn.Font = Enum.Font.SourceSansBold
closeBtn.TextSize = 20
closeBtn.TextColor3 = Color3.fromRGB(255,255,255)
closeBtn.BackgroundColor3 = Color3.fromRGB(180,0,0)
local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0,8)
closeCorner.Parent = closeBtn

-- FK Object (tombol bulat panjang)
local fkBtn = Instance.new("TextButton")
fkBtn.Parent = ScreenGui
fkBtn.Size = UDim2.new(0,45,0,45)
fkBtn.Position = UDim2.new(0.5,-22,0,20)
fkBtn.Text = "FK"
fkBtn.Font = Enum.Font.SourceSansBold
fkBtn.TextSize = 18
fkBtn.TextColor3 = Color3.fromRGB(255,255,255)
fkBtn.BackgroundColor3 = Color3.fromRGB(0,0,0)
fkBtn.Visible = false
fkBtn.Active = true
fkBtn.Draggable = true
local fkCorner = Instance.new("UICorner")
fkCorner.CornerRadius = UDim.new(1,0)
fkCorner.Parent = fkBtn

closeBtn.MouseButton1Click:Connect(function()
	mainFrame.Visible = false
	fkBtn.Visible = true
end)
fkBtn.MouseButton1Click:Connect(function()
	mainFrame.Visible = true
	fkBtn.Visible = false
end)

-- Start Walk Button
local startBtn = Instance.new("TextButton")
startBtn.Parent = mainFrame
startBtn.Size = UDim2.new(0,150,0,50)
startBtn.Position = UDim2.new(0.5,-75,0.7,0)
startBtn.Text = "Start Walk"
startBtn.Font = Enum.Font.SourceSansBold
startBtn.TextSize = 20
startBtn.TextColor3 = Color3.fromRGB(255,255,255)
startBtn.BackgroundColor3 = Color3.fromRGB(60,60,60)
local startCorner = Instance.new("UICorner")
startCorner.CornerRadius = UDim.new(0,12)
startCorner.Parent = startBtn

-- Cekpoint List
local checkpoints = {
	Vector3.new(-412.20,252.31,762.63),
	Vector3.new(-363.79,391.31,530.98),
	Vector3.new(268.42,433.00,525.19),
	Vector3.new(322.83,493.31,356.48),
	Vector3.new(231.93,317.31,-144.80),
}

-- Auto Walk Logic
local walkActive = false
local currentCheckpoint = 1
local stopWalk = false

local function walkToNextCheckpoint()
	while walkActive and currentCheckpoint <= #checkpoints do
		local targetPos = checkpoints[currentCheckpoint]
		local path = PathfindingService:CreatePath({
			AgentRadius = 2,
			AgentHeight = 5,
			AgentCanJump = true,
			AgentJumpHeight = 7,
			AgentMaxSlope = 45,
		})
		path:ComputeAsync(hrp.Position, targetPos)
		local waypoints = path:GetWaypoints()

		for _, wp in ipairs(waypoints) do
			if not walkActive or stopWalk then return end

			-- Humanoid jalan
			hum:MoveTo(wp.Position)
			hum:ChangeState(Enum.HumanoidStateType.Running)

			if wp.Action == Enum.PathWaypointAction.Jump then
				hum:ChangeState(Enum.HumanoidStateType.Jumping)
			end

			local reached = false
			local connection
			connection = hum.MoveToFinished:Connect(function(success)
				reached = true
			end)
			while not reached and walkActive and not stopWalk do
				RunService.Heartbeat:Wait()
			end
			connection:Disconnect()
		end
		currentCheckpoint = currentCheckpoint + 1
	end
end

-- Start / Pause Toggle
startBtn.MouseButton1Click:Connect(function()
	walkActive = not walkActive
	stopWalk = false
	if walkActive then
		startBtn.Text = "Pause Walk"
		coroutine.wrap(walkToNextCheckpoint)()
	else
		startBtn.Text = "Start Walk"
		stopWalk = true
	end
end)
